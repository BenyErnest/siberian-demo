@page "/restaurantes/editar/{id:int}"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Models
@using Siberian.Demo.Shared
@attribute [Authorize]
@inject HttpClient http
@inject NavigationManager NavigationManager

<h3>Editar</h3>

@if (_ciudades == null)
{
	<p><em>Loading...</em></p>
}
else
{
	<EditForm Model="@_restaurant" OnValidSubmit="HandleValidSubmit">
	 <DataAnnotationsValidator />
	 <ValidationSummary />

	 <p>
	  <label>
	   Nombre restaurante:
	   <InputText DisplayName="Nombre Restaurante" id="name" @bind-Value="_restaurant.NombreRestaurante" />
	  </label>
	 </p>
	 <p>
	  <label>
	   Número aforo:
	   <InputNumber id="numero-aforo" @bind-Value="_restaurant.NumeroAforo" />
	  </label>
	 </p>

	 <p>
	  <label>
	   Télefono:
	   <InputText id="telefono" @bind-Value="_restaurant.Telefono" />
	  </label>
	 </p>

	 <p>
	  <label>
	   Ciudades:
	   <InputSelect id="ciudades" @bind-Value="_restaurant.IdCiudad">
					@foreach (var ciudad in _ciudades)
					{
		<option value="@ciudad.IdCiudad">@ciudad.NombreCiudad</option>
					}
   </InputSelect>
  </label>
 </p>

 <button type="submit">Editar</button>
</EditForm>
}

@code {
	[Parameter]
	public int Id { get; set; }

	private EditarRestaurantDto _restaurant = new();
	private Ciudad[] _ciudades;

	protected override async Task OnInitializedAsync()
	{
		try
		{
			var restaurantTask = http.GetFromJsonAsync<Restaurante>($"api/Restaurantes/{Id}");
			var ciudadesTask = http.GetFromJsonAsync<Ciudad[]>("api/Ciudades");

			await Task.WhenAll(
				restaurantTask,
				ciudadesTask
			);

			_ciudades = ciudadesTask.GetAwaiter().GetResult();

			var restaurante = restaurantTask.GetAwaiter().GetResult();

			_restaurant.IdCiudad = restaurante.IdCiudad;
			_restaurant.IdRestaurante = restaurante.IdRestaurante;
			_restaurant.NombreRestaurante = restaurante.NombreRestaurante;
			_restaurant.NumeroAforo = restaurante.NumeroAforo;
			_restaurant.Telefono = restaurante.Telefono;
		}
		catch (AccessTokenNotAvailableException exception)
		{
			exception.Redirect();
		}
	}

	private async Task HandleValidSubmit()
	{
		await http.PutAsJsonAsync($"api/restaurantes/{Id}", new Restaurante
		{
			NombreRestaurante = _restaurant.NombreRestaurante,
			IdCiudad = _restaurant.IdCiudad,
			NumeroAforo = _restaurant.NumeroAforo,
			Telefono = _restaurant.Telefono
		});

		NavigationManager.NavigateTo("/restaurantes");
	}
}
